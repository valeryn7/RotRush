go.property("kind", hash("unknown"))
go.property("is_correct", false)
go.property("radius", 80)
go.property("fx", msg.url("#fx")) 

local SPEED = 220

function init(self)
	self.dead = false
	self.speed = SPEED

	msg.post(self.fx, "disable")

	-- Ajustar radio al scale
	local s = go.get_scale().x
	self.radius = self.radius * s

	-- Ocultar el círculo debug al inicio
	msg.post("#debug", "disable")

	-- Mostrar sprite del ítem si tiene
	if self.kind ~= hash("unknown") then
		sprite.play_flipbook("#sprite", self.kind)
	end
end

function update(self, dt)
	if self.dead then return end

	local p = go.get_position()
	p.y = p.y - self.speed * dt
	go.set_position(p)

	if p.y < -200 then
		msg.post(self.controller or ".", "item_destroyed", { id = go.get_id() })
		go.delete()
		return
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("destroy_explosive") then
		if self.dead then return end
		self.dead = true

		-- Activar sprite y animación de explosión
		msg.post("fx#sprite", "enable")
		msg.post("fx#sprite", "play_animation", { id = hash("explosion") })

		-- Ocultar debug
		msg.post("#debug", "disable")

		-- Destruir con delay
		timer.delay(0.4, false, function()
			go.delete()
		end)

	elseif message_id == hash("destroy_silent") then
		self.dead = true
		go.delete()

	elseif message_id == hash("check_hit") then
		if self.dead then return end

		self.controller = message.controller

		local dx = go.get_position().x - message.world_x
		local dy = go.get_position().y - message.world_y
		local dist2 = dx * dx + dy * dy

		if dist2 <= self.radius * self.radius then
			self.dead = true

			-- Activar fx y animación
			msg.post(self.fx, "enable")
			msg.post(self.fx, "play_animation", { id = hash("explosion") })

			-- Notificar al controlador
			msg.post(self.controller, "item_picked", {
				kind = self.kind,
				is_correct = self.is_correct
			})

			timer.delay(0.3, false, function()
				msg.post(self.controller, "item_destroyed", { id = go.get_id() })
				go.delete()
			end)
		end

	elseif message_id == hash("set_kind") then
		self.kind = message.kind or self.kind
		sprite.play_flipbook("#sprite", self.kind)

	elseif message_id == hash("show_debug") then
		msg.post("#debug", "enable")
		local tint = self.is_correct and vmath.vector4(0, 1, 0, 0.5) or vmath.vector4(1, 0, 0, 0.5)
		sprite.set_constant("#debug", "tint", tint)

	elseif message_id == hash("hide_debug") then
		msg.post("#debug", "disable")
	end
end
